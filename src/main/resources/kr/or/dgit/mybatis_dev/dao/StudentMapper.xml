<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.dgit.mybatis_dev.dao.StudentMapper">
	
	<sql id="selectSql">
		SELECT STUD_ID, NAME, EMAIL, PHONE, DOB FROM students 
	</sql>
	<sql id="whereSql">
		<where>
			<if test="studId !=null">
				STUD_ID = #{studId}
			</if>
		</where>
	</sql>
	
	<resultMap type="Student" id="StudentResult">
		<id property="studId" column="stud_id"/>
		<result property="name" column="name"/>
		<result property="email" column="email"/>
	</resultMap>
	
	<update id="updateStudent" parameterType="Student">
		UPDATE students
		<set>
			<if test="name != null">
				NAME = #{name},	</if>   
			<if test="email != null">
				EMAIL = #{email},	</if> 
			<if test="phone != null">
				PHONE = #{phone},	</if> 
			<if test="dob != null">
				DOB = #{dob},	</if> 
		</set>
		<include refid="whereSql"></include>
	</update>
	
		<insert id="insertStudent" parameterType="Student" >
      insert into Student
      <trim prefix="values(" suffix=")" suffixOverrides=",">
         <if test="studId !=null">
            #{studId},
         </if>
         <if test="name !=null">
            #{name},
         </if>
         <if test="email !=null">
            #{email},
         </if>
         <if test="phone !=null">
            #{phone},
         </if>
         <if test="dob !=null">
            #{dob},
         </if>
         <if test="gender !=null">
            #{gender},
         </if>
      </trim>
   	</insert>
	
	<insert id="insertEnumStudent" parameterType="Student">
		INSERT INTO students (STUD_ID, NAME, EMAIL, PHONE, GENDER)
		VALUES(#{studId},#{name},#{email},#{phone},#{gender})
	</insert>
	
	<delete id="deleteStudent" parameterType="int">
		DELETE FROM students
		<include refid="whereSql"></include>
	</delete>
	
	
	<resultMap type="Student" id="StudentResultExtends" extends="StudentResult">
		<result property="address.addrId" column="addr_id"/>
		<result property="address.street" column="street"/>
		<result property="address.city" column="city"/>
		<result property="address.state" column="state"/>
		<result property="address.zip" column="zip"/>
		<result property="address.country" column="country"/>
	</resultMap>
	
	<resultMap type="Student" id="StudentResultAssociation" extends="StudentResult">
		<association property="address" resultMap="kr.or.dgit.mybatis_dev.dao.AddressMapper.AddressResult"/>
	</resultMap>
	
	<select id="selectStudentByNoAssociationAddress" parameterType="Student" resultMap="StudentResultAssociation">
		select STUD_ID, NAME, EMAIL, PHONE, DOB, a.ADDR_ID, STREET, CITY, STATE, ZIP, COUNTRY
		from students s left join addresses a on s.ADDR_ID = a.ADDR_ID
		<include refid="whereSql"/>
	</select>
	
	
	<select id="selectStudentByNoWithAddress" parameterType="Student" resultMap="StudentResultExtends">
		select STUD_ID, NAME, EMAIL, PHONE, DOB, a.ADDR_ID, STREET, CITY, STATE, ZIP, COUNTRY
		from students s left join addresses a on s.ADDR_ID = a.ADDR_ID
		<include refid="whereSql"/>
	</select>
	
	
	<!-- ResultMap으로 결과 리턴 -->
	
	<select id="selectStudentByNoForResultMap" parameterType="Student" resultMap="StudentResult">
		<include refid="selectSql"/>
		<include refid="whereSql"/>
	</select>
	
	<select id="selectStudentByAllForResultMap" resultMap="StudentResult">
		<include refid="selectSql"></include>
	</select>
	
	
	<!-- HashMap으로 결과 리턴 -->
	
	<select id="selectStudentByNoForHashMap" parameterType="Student" resultType="map">
		<include refid="selectSql"/>
		<include refid="whereSql"/>
	</select>
	
	<select id="selectStudentByAllForHashMap" resultType="map">
		<include refid="selectSql"></include>
	</select>
	
	
	
	
</mapper>